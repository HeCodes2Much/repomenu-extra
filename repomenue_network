#!/usr/bin/env bash
# -*-coding:utf-8 -*-
# Auto updated?
#   Yes
#File :
#   repomenue_network
#Author:
#   The-Repo-Club [wayne6324@gmail.com]
#Github:
#   https://github.com/The-Repo-Club/
#
# Created:
#   Wed 10 March 2021, 12:34:47 PM [GMT]
# Modified:
#   Fri 21 January 2022, 02:29:56 PM [GMT]
#
# Description:
#   <Todo>
#

wifi_check=
lan_check=
net_check=

getConnections() {
    connected=$(nmcli dev wifi list | sed -n '1!p')
    [[ -z $connected ]] && exit
    printf "%s" "$connected"
}

getConnectionsOther() {
    connected=$(getConnections | cut -b 9- | sed s/Repeater//g | awk {'printf ("Connect|%s|%s|%s|%s\n", $1, $8, $9, $2)'} | column -t -s '|' | sort -k4,4 -u)
    [[ -z $connected ]] && exit
    printf "%s" "$connected"
}

getConnected() {
    connected=$(getConnections | grep "^*" | cut -b 9- | sed s/Repeater//g | awk {'printf ("[Connected]|%s|%s|%s|%s|\n", $1, $8, $9, $2)'} | column -t -s '|' | sort -k4,4 -u)
    [[ -z $connected ]] && exit
    printf "%s" "$connected"
}

checkLanEnabled() {
    check=$(nmcli radio wwan)
    if [ "$check" = "enabled" ]; then
        printf "%s" "Disable Lan"
    else
        printf "%s" "Enable Lan"
    fi
}

checkWifiEnabled() {
    check=$(nmcli radio wifi)
    if [ "$check" = "enabled" ]; then
        printf "%s " "Disable Wifi"
    else
        printf "%s " "Enable Wifi"
    fi
}

checkNetworkEnabled() {
    check=$(nmcli network connectivity)
    if [ "$check" = "full" ]; then
        printf "%s " "Disable Network"
    else
        printf "%s " "Enable Network"
    fi
}

connectionManager(){
    printf "%s " "Launch Connection Manager"
}

rescanNetworks(){
    printf "%s " "Rescan for Networks"
}

disableWifi(){
    $(nmcli radio wifi off)
    $(notify-send "Wifi Network" "Wifi has been Disabled")
}

enableWifi(){
    $(nmcli radio wifi on)
    $(notify-send "Wifi Network" "Wifi has been Enabled")
}

disableLan(){
    $(nmcli radio wwan off)
    $(notify-send "Lan Network" "Wifi has been Disabled")
}

enableLan(){
    $(nmcli radio wwan on)
    $(notify-send "Lan Network" "Wifi has been Enabled")
}

disableNet(){
    $(nmcli network off)
    $(notify-send "Network" "Network has been Disabled")
}

enableNet(){
    $(nmcli network on)
    $(notify-send "Network" "Network has been Enabled")
}

deleteSavedNetworks(){
    printf "%s " "Delete a connection"
}

deleteNetworkMenu(){
    list=$(nmcli -t connection)
    connection=$(echo -e ">>r Delete a connection\n$list" | column -t -s ':' | repomenu -c -ps 1 -l 20 -w -600 -i -h -1 -q "Delete a connection" | awk -F"  " {'printf ("%s", $2)'})
    [[ -z $connection ]] && exit
    nmcli connection delete "$connection"
}

checkSavedNetworks(){
    printf "%s " "Saved Connections"
}

savedNetworkMenu(){
    list=$(nmcli -t connection)
    connection=$(echo -e ">>g Saved Connections\n$list" | column -t -s ':' | repomenu -c -ps 1 -l 20 -w -600 -i -h -1 -q "Saved Connections" | awk -F"  " {'printf ("%s", $1)'})
    [[ -z $connection ]] && exit
    nmcli connection up "$connection"
}

network=$(echo -e ">>g Conncted Networks
$(getConnected)
>>r Other Networks
$(getConnectionsOther)
>>b Network Settings
$(checkLanEnabled)
$(checkWifiEnabled)
$(checkNetworkEnabled)
$(connectionManager)
$(rescanNetworks)
>>p Connection Settings
$(deleteSavedNetworks)
$(checkSavedNetworks)" | repomenu -c -ps 1 -l 20 -w -600 -i -h -1 -q "Networks")

case $network in
        Disable*)
            check=$(echo "$network" | awk {'printf ("%s", $2)'})
            if [ "$check" = "Wifi" ]; then
                wifi_check=1
            elif [ "$check" = "Lan" ]; then
                lan_check=1
            else
                net_check=1
            fi
            shift
            ;;
        Enable*)
            check=$(echo "$network" | awk {'printf ("%s", $2)'})
            if [ "$check" = "Wifi" ]; then
                wifi_check=2
            elif [ "$check" = "Lan" ]; then
                lan_check=2
            else
                net_check=2
            fi
            shift
            ;;
        Rescan*)
            repomenue_network
            exit
            ;;
        Launch*)
            nm-connection-editor
            shift
            ;;
        Saved*)
            savedNetworkMenu
            shift
            ;;
        Delete*)
            deleteNetworkMenu
            shift
            ;;
        Connect*)
            ssid=$(printf "%s\n" "$network" | awk {'printf ("%s\n", $5)'})
            password=$(imenu -P)
            nmcli device wifi connect "$ssid" password "$password"
            printf "%s %s\n" "$ssid" "$password"
            ;;
        *)
            shift
            ;;
esac

if [[ "$wifi_check" ]]; then
    if [ "$wifi_check" -eq "1" ]; then
        disableWifi
    elif [ "$wifi_check" -eq "2" ]; then
        enableWifi
    fi
elif [[ "$lan_check" ]]; then
    if [ "$lan_check" -eq "1" ]; then
        disableLan
    elif [ "$lan_check" -eq "2" ]; then
        enableLan
    fi
elif [[ "$net_check" ]]; then
    if [ "$net_check" -eq "1" ]; then
        disableNet
    elif [ "$net_check" -eq "2" ]; then
        enableNet
    fi
fi

