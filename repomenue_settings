#!/usr/bin/env bash

# path:       /usr/bin/repomenue_settings
# author:     The-Repo-Club [wayne6324@gmail.com]
# github:     https://github.com/The-Repo-Club/repomenu-extra
# date:       2021-01-03 12:34:47.440579

getsettings() {
    TERMINAL=$(gsettings get org.therepoclub.repomenu.preferences terminal | sed s/\'//g)
    WEBBROWSER=$(gsettings get org.therepoclub.repomenu.preferences webbrowser | sed s/\'//g)
    FILEMANAGER=$(gsettings get org.therepoclub.repomenu.preferences filemanager | sed s/\'//g)
    MAILREADER=$(gsettings get org.therepoclub.repomenu.preferences mailreader | sed s/\'//g)
    TEXTEDITOR=$(gsettings get org.therepoclub.repomenu.preferences texteditor | sed s/\'//g)
    HYPERVISOR=$(gsettings get org.therepoclub.repomenu.preferences hypervisor | sed s/\'//g)
    GITBROWSER=$(gsettings get org.therepoclub.repomenu.preferences gitbrowser | sed s/\'//g)

    CLIPMENU=$(gsettings get org.therepoclub.instawm.preferences clipmenucmd | sed s/\'//g)
    INSTASETTINGS=$(gsettings get org.therepoclub.instawm.preferences instasettingscmd | sed s/\'//g)
    POWERMENU=$(gsettings get org.therepoclub.instawm.preferences powermenucmd | sed s/\'//g)
    SMARTMENU=$(gsettings get org.therepoclub.instawm.preferences smartmenucmd | sed s/\'//g)
    STARTMENU=$(gsettings get org.therepoclub.instawm.preferences startmenucmd | sed s/\'//g)
    SYSTEMMONITOR=$(gsettings get org.therepoclub.instawm.preferences systemmonitorcmd | sed s/\'//g)
}

selectterminal() {
    getsettings
    selectdefault terminal "$TERMINAL"
}

selectwebbrowser() {
    getsettings
    selectdefault webbrowser "$WEBBROWSER"
}

selectfilemanager() {
    getsettings
    selectdefault filemanager "$FILEMANAGER"
}

selectmailreader() {
    getsettings
    selectdefault mailreader "$MAILREADER"
}

selecttexteditor() {
    getsettings
    selectdefault texteditor "$TEXTEDITOR"
}

selecthypervisor() {
    getsettings
    selectdefault hypervisor "$HYPERVISOR"
}

selectgitbrowser() {
    getsettings
    selectdefault gitbrowser "$GITBROWSER"
}

selectclipmenucmd() {
    getsettings
    selectwmdefault clipmenucmd "$CLIPMENU"
}

selectinstasettingscmd() {
    getsettings
    selectwmdefault instasettingscmd "$INSTASETTINGS"
}

selectpowermenucmd() {
    getsettings
    selectwmdefault powermenucmd "$POWERMENU"
}

selectsmartmenucmd() {
    getsettings
    selectwmdefault smartmenucmd "$SMARTMENU"
}

selectstartmenucmd() {
    getsettings
    selectwmdefault startmenucmd "$STARTMENU"
}

selectsystemmonitorcmd() {
    getsettings
    selectwmdefault systemmonitorcmd "$SYSTEMMONITOR"
}

selectdefaultoptions() {
    options=">>h Default (${@:2})
:b Custom
:y Back
:r Close Settings"

    echo -e "$options" | repomenu -ps 1 -l 20 -w -400 -i -h -1 -y -1 -bw 4 -q "${1:-Search Settings...}" -x 10000
}

selectdefault() {
    LOOPSETTING="true"
    while [ -n "$LOOPSETTING" ]; do
        CHOICE="$(selectdefaultoptions $@)"
        [ -n "$CHOICE" ] || exit
        case "$CHOICE" in
        *Custom)
            CUSTOMAPP="$(imenu -i "Set custom $1")"
            [ -z "$CUSTOMAPP" ] && echo "Program terminated." && exit
            if imenu -c "Would you like to set $1 to $CUSTOMAPP?"; then
                gsettings set org.therepoclub.repomenu.preferences $1 $CUSTOMAPP
                notify-send "repomenue_settings" "$1 changed from $2 to $CUSTOMAPP" && asksetting
            else
                defaultapplicationsettings
                echo "Program terminated." && exit
            fi
            ;;
        *Back)
            defaultapplicationsettings
            echo "Program terminated." && exit
            ;;
        *)
            echo "Program terminated." && exit
            ;;
        esac
    done
}

selectwmdefault() {
    LOOPSETTING="true"
    while [ -n "$LOOPSETTING" ]; do
        CHOICE="$(selectdefaultoptions $@)"
        [ -n "$CHOICE" ] || exit
        case "$CHOICE" in
        *Custom)
            CUSTOMAPP="$(imenu -i "Set custom $1")"
            [ -z "$CUSTOMAPP" ] && echo "Program terminated." && exit
            if imenu -c "Would you like to set $1 to $CUSTOMAPP?"; then
                gsettings set org.therepoclub.instawm.preferences $1 $CUSTOMAPP
                notify-send "repomenue_settings" "$1 changed from $2 to $CUSTOMAPP" && asksetting
            else
                defaultapplicationsettings
                echo "Program terminated." && exit
            fi
            ;;
        *Back)
            defaultapplicationsettings
            echo "Program terminated." && exit
            ;;
        *)
            echo "Program terminated." && exit
            ;;
        esac
    done
}


defaultapplicationsettingsoptions() {
    getsettings
    if command -v repowm &> /dev/null; then
        wm="\n>>h Window Manager defaults
:g ClipMenu
:g WMSettings
:g PowerMenu
:g SmartMenu
:g StartMenu
:g SystemMonitor"
    fi

    apps=">>h Default applications
:b Terminal Emulator
:b Web Browser
:b File Manager
:b Mail Reader
:b Text Editor
:b Hypervisor
:b Git Client"

    options="\n>>h Options
:y Back
:r Close Settings"

    echo -e "$apps$wm$options" | repomenu -ps 1 -l 20 -w -400 -i -h -1 -y -1 -bw 4 -q "${1:-Search Settings...}" -x 10000

}

defaultapplicationsettings() {
    LOOPSETTING="true"
    while [ -n "$LOOPSETTING" ]; do
        CHOICE="$(defaultapplicationsettingsoptions)"
        [ -n "$CHOICE" ] || exit
        case "$CHOICE" in
        *Emulator)
            selectterminal
            ;;
        *Browser)
            selectwebbrowser
            ;;
        *Manager)
            selectfilemanager
            ;;
        *Reader)
            selectmailreader
            ;;
        *Editor)
            selecttexteditor
            ;;
        *Hypervisor)
            selecthypervisor
            ;;
        *Client)
            selectgitbrowser
            ;;
        *ClipMenu)
            selectclipmenucmd
            ;;
        *WMSettings)
            selectinstasettingscmd
            ;;
        *PowerMenu)
            selectpowermenucmd
            ;;
        *SmartMenu)
            selectsmartmenucmd
            ;;
        *StartMenu)
            selectstartmenucmd
            ;;
        *SystemMonitor)
            selectsystemmonitorcmd
            ;;
        *Back)
            asksetting
            echo "Program terminated." && exit
            ;;
        *)
            echo "Program terminated." && exit
            ;;
        esac
    done
}

soundsettingsoptions() {
    options=">>h Sound settings
:b ﰝSystem Audio
:y Back
:r Close Settings"

    echo -e "$options" | repomenu -ps 1 -l 20 -w -400 -i -h -1 -y -1 -bw 4 -q "${1:-Search Settings...}" -x 10000
}

soundsettings() {
    LOOPSETTING="true"
    while [ -n "$LOOPSETTING" ]; do
        CHOICE="$(soundsettingsoptions)"
        [ -n "$CHOICE" ] || exit
        case "$CHOICE" in
        *Audio)
            pavucontrol &
            echo "Program terminated." && exit
            ;;
        *Back)
            asksetting
            echo "Program terminated." && exit
            ;;
        *)
            echo "Program terminated." && exit
            ;;
        esac
    done
}

appearancesettingsoptions() {
    options=">>h Appearance settings
:b Application Appearance
:b Wallpaper
:y Back
:r Close Settings"

    echo -e "$options" | repomenu -ps 1 -l 20 -w -400 -i -h -1 -y -1 -bw 4 -q "${1:-Search Settings...}" -x 10000
}

appearancesettings() {
    LOOPSETTING="true"
    while [ -n "$LOOPSETTING" ]; do
        CHOICE="$(appearancesettingsoptions)"
        [ -n "$CHOICE" ] || exit
        case $CHOICE in
        *Appearance)
            lxappearance
            echo "Program terminated." && exit
            ;;
        *Wallpaper)
            wallpapersettings
            echo "Program terminated." && exit
            ;;
        *Back)
            asksetting
            echo "Program terminated." && exit
            ;;
        *)
            echo "Program terminated." && exit
            ;;
        esac
    done
}

displaysettingsoptions() {
    options=">>h Display Settings
:b Change Display Settings
:g Save Current Settings
:g Load Current Settings
:y Back
:r Close Settings"

    echo -e "$options" | repomenu -ps 1 -l 20 -w -400 -i -h -1 -y -1 -bw 4 -q "${1:-Search Settings...}" -x 10000
}

displaysettings() {
    LOOPSETTING="true"
    while [ -n "$LOOPSETTING" ]; do
        CHOICE="$(displaysettingsoptions)"
        [ -n "$CHOICE" ] || exit
        case $CHOICE in
        *Display*)
            repomenue_randr &
            ;;
        *Save*)
            notify-send "repomenue_settings" "Saving monitor settings"
            autorandr --force --save $XDG_CURRENT_DESKTOP
            ;;
        *Load*)
            notify-send "repomenue_settings" "Loading monitor settings"
            autorandr --force --load $XDG_CURRENT_DESKTOP
            ;;
        *Back)
            asksetting
            echo "Program terminated." && exit
            ;;
        *)
            echo "Program terminated." && exit
            ;;
        esac
    done
}

asksettingoptions() {
    options=">>h Settings
:b ﱘSound
:b Network
:b Display
:b Install Software
:b Default Applications
:r Close Settings"

    echo -e "$options" | repomenu -ps 1 -l 20 -w -400 -i -h -1 -y -1 -bw 4 -q "${1:-Search Settings...}" -x 10000
}

asksetting() {
    LOOPSETTING="true"
    while [ -n "$LOOPSETTING" ]; do
        SETTING="$(asksettingoptions)"
        [ -n "$SETTING" ] || exit
        unset LOOPSETTING
        case "$SETTING" in
        *Sound)
            soundsettings
            ;;
        *Appearance)
            appearancesettings
            ;;
        *Software)
            repomenue_pacman &
            ;;
        *Display)
            displaysettings
            ;;
        *Keyboard)
            keyboardsettings
            ;;
        *Bluetooth)
            bluetoothsettings
            ;;
        *Power)
            xfce4-power-manager-Search Settings &
            ;;
        *Language)
            languagesettings
            ;;
        *Network)
            repomenue_network &
            ;;
        *Storage)
            storagesettings
            ;;
        *Advanced)
            advancedsettings
            ;;
        *Mouse)
            mousesettings
            ;;
        *Date)
            timesettings
            ;;
        *Applications)
            defaultapplicationsettings
            ;;
        *)
            echo "Program terminated." && exit
        ;;
        esac
    done
}

asksetting

testsettings() {
">>h Settings
:b 墳Sound
:b Network
:b Appearance
:b Bluetooth
:b Power
:b Keyboard
:b Mouse
:b Language
:g Time and Date
:b Storage
:b Advanced
:b Notification sound
:r Close Settings"
}
